/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormListTarget.java
 *
 * Created on Apr 26, 2012, 11:58:37 PM
 */
package thesis.targets;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.JDOMException;
import org.jdom.input.SAXBuilder;

/**
 *
 * @author BSTNC
 */
public class FormListTarget extends javax.swing.JInternalFrame {

    /** Creates new form FormListTarget */
    public FormListTarget() {
        try {
            initComponents();
            TableUpdateMySibling();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please load a xml file !");
        } 
                if (thesis.FormAna.XmlURL!=null) {
            lblUyari.setText(thesis.FormAna.XmlURL+" file loaded !");
        }else {
            lblUyari.setText("Please load a xml file !");
            lblUyari.setForeground(Color.red);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblUyari = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Target List");
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        lblUyari.setText("!..");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(lblUyari, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(232, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblUyari)
                    .addContainerGap(463, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
      
}//GEN-LAST:event_formInternalFrameOpened

private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

}//GEN-LAST:event_formInternalFrameActivated
    ///////////TABLE GUNCELLE

    private void TableUpdateMySibling() throws IOException, JDOMException {

        DefaultTableModel tableModel1 = (DefaultTableModel) jTable1.getModel();
        tableModel1.setRowCount(0);
        tableModel1.setColumnCount(4);
        SAXBuilder builder = new SAXBuilder();
        File xmlFile = new File(thesis.FormAna.XmlURL);



        Document document = (Document) builder.build(xmlFile);
        Element rootNode = document.getRootElement();
        List targetList = rootNode.getChildren("target");
        Object data[] = new Object[4];
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < targetList.size(); i++) {
            Element node = (Element) targetList.get(i);

            
            data[0] = node.getAttributeValue("id").toString();
            data[1] = node.getAttributeValue("name").toString();
            try {
                if(node.getAttributeValue("default").toString() != null)
                    data[2] = node.getAttributeValue("default").toString();
            else data[2]="";
            } catch (Exception e) {
                data[2]="";
            }
            try {
                if (!node.getAttributeValue("description").toString().equals("")) {
                    data[3] = node.getAttributeValue("description").toString();
            }else data[3] = "";
            } catch (Exception e) {
                data[3] = "";
            }

            tableModel.addRow(data);
        }
//
        String[] colName = { "id", "name", "default", "description"};
        tableModel.setColumnIdentifiers(colName);
        

    jTable1.setModel(tableModel);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblUyari;
    // End of variables declaration//GEN-END:variables
}
